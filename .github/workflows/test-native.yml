name: Native Integration Tests
env:
  test_app_path: tests/test

on:
  push:
  pull_request:

jobs:
  build-ios-test-dev-container:
    name: Build iOS Test Development Container App
    uses: ./.github/workflows/build-ios-test-dev-container.yml
    secrets: inherit
    permissions:
      contents: read
      pull-requests: read
    # with:

  test-maestro:
    needs:
      - build-ios-test-dev-container
    runs-on: macos-13
    defaults:
      run:
        working-directory: ${{ env.test_app_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          workspace-focus: test-app

      - name: Download Dev Container App
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          key: ${{ needs.build-ios-test-dev-container.outputs.built-app-cache-key }}
          path: ${{ needs.build-ios-test-dev-container.outputs.built-app-path }}

      - name: Get Simulator UDID
        id: get-simulator-udid
        run: |
          AVAILABLE_SIMULATORS=$(xcrun simctl list devices available --json)
          echo "Available simulators: $AVAILABLE_SIMULATORS"
          RUNTIME=$(echo $AVAILABLE_SIMULATORS | jq -r '.devices | keys | map(select(test("iOS"))) | last')
          echo "Runtime: $RUNTIME"
          SIMULATOR_INFO=$(echo $AVAILABLE_SIMULATORS | jq ".devices.\"$RUNTIME\" | map(select(.name | test(\"iPhone\"))) | last")
          SIMULATOR_UDID=$(echo $SIMULATOR_INFO | jq -r .udid)
          echo "Simulator info: $SIMULATOR_INFO"
          echo "Simulator UDID: $SIMULATOR_UDID"
          echo "simulator_udid=$SIMULATOR_UDID" >> $GITHUB_OUTPUT

      - name: Boot Simulator
        env:
          SIMULATOR_UDID: ${{ steps.get-simulator-udid.outputs.simulator_udid }}
        run: xcrun simctl boot $SIMULATOR_UDID

      - name: Install Maestro
        run: |
          curl -fsSL "https://get.maestro.mobile.dev" | bash
          export PATH="$PATH":"$HOME/.maestro/bin"

      - name: Start Dev Server
        run: node scripts/start-dev-server.mjs

      - name: Install Dev Container App in Simulator
        env:
          SIMULATOR_UDID: ${{ steps.get-simulator-udid.outputs.simulator_udid }}
          APP_PATH: ${{ needs.build-ios-test-dev-container.outputs.built-app-path }}
        working-directory: .
        run: xcrun simctl install $SIMULATOR_UDID $APP_PATH

      - name: Test
        run: maestro test maestro-flows/flow.yaml

      - name: Upload Server Log
        uses: actions/upload-artifact@v4.3.1
        if: ${{ always() }}
        with:
          name: dev-server.log
          path: |
            ${{ env.test_app_path }}/dev-server.log

      - name: Prepare Maestro Logs
        if: ${{ always() }}
        run: cp -r "$HOME/.maestro/tests" maestro-logs

      - name: Upload Maestro Logs
        uses: actions/upload-artifact@v4.3.1
        if: ${{ always() }}
        with:
          name: maestro-logs
          path: |
            ${{ env.test_app_path }}/maestro-logs
